// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package logic

import (
	"context"
	es "ipfsdisk/pkg/erros"
	"ipfsdisk/service/user/rpc/internal/svc"
	"ipfsdisk/service/user/rpc/user"

	"github.com/tal-tech/go-zero/core/logx"
)

type UserChangePasswdLogic struct {
	ctx    context.Context
	svcCtx *svc.ServiceContext
	logx.Logger
}

func NewUserChangePasswdLogic(ctx context.Context, svcCtx *svc.ServiceContext) *UserChangePasswdLogic {
	return &UserChangePasswdLogic{
		ctx:    ctx,
		svcCtx: svcCtx,
		Logger: logx.WithContext(ctx),
	}
}

// UserChangePasswd 修改密码
func (l *UserChangePasswdLogic) UserChangePasswd(in *user.ChangePasswdReq) (req *user.MsgResponse, err error) {
	// todo: add your logic here and delete this line
	req.Code = 200
	// 比对旧密码是否准确
	panUser := l.svcCtx.UserModel.PanUser
	_, err = panUser.WithContext(l.ctx).Where(panUser.ID.Eq(in.Id), panUser.Password.Eq(in.OldPasswd)).First()
	if err != nil {
		l.Logger.Error("登录查询数据库失败--》", err)
		return req, es.PasswdError
	}
	// 更改密码
	_, err = panUser.WithContext(l.ctx).Where(panUser.ID.Eq(in.Id)).Updates(panUser.Password.Value(in.NewPasswd))
	if err != nil {
		return req, err
	}
	req.Success = true
	req.Msg = "更新密码成功"
	return
}
