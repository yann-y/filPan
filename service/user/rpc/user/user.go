// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"
	user "ipfsdisk/service/user/rpc/pb"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChangePasswdReq   = user.ChangePasswdReq
	IdRequest         = user.IdRequest
	LoginReq          = user.LoginReq
	MsgResponse       = user.MsgResponse
	ResisterReq       = user.ResisterReq
	UserLoginResponse = user.UserLoginResponse

	User interface {
		//  用户登录
		UserLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserLoginResponse, error)
		//  用户注册
		UserResister(ctx context.Context, in *ResisterReq, opts ...grpc.CallOption) (*UserLoginResponse, error)
		//  修改密码
		UserChangePasswd(ctx context.Context, in *ChangePasswdReq, opts ...grpc.CallOption) (*MsgResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

//  用户登录
func (m *defaultUser) UserLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}

//  用户注册
func (m *defaultUser) UserResister(ctx context.Context, in *ResisterReq, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserResister(ctx, in, opts...)
}

//  修改密码
func (m *defaultUser) UserChangePasswd(ctx context.Context, in *ChangePasswdReq, opts ...grpc.CallOption) (*MsgResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserChangePasswd(ctx, in, opts...)
}
